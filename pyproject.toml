[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Ivan Stasevich <pravitel2015ify@gmail.com>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["all"], version = "^0.115.5"}
sqlalchemy = { extras = ["asyncio"], version = "^2.0.30" }
gunicorn = "^22.0.0"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pyjwt = {extras = ["crypto"], version = "^2.9.0"}
sqladmin = "^0.19.0"
humanize = "^4.10.0"
redis = "^5.0.8"
aiogram = "^3.13.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-fastapi = "^0.48b0"
opentelemetry-instrumentation-logging = "^0.48b0"
opentelemetry-exporter-otlp = "^1.27.0"
prometheus-client = "^0.21.0"
uvicorn-worker = "^0.2.0"
opentelemetry-instrumentation-sqlalchemy = "^0.48b0"
opentelemetry-instrumentation-httpx = "^0.48b0"
fast-depends = "^2.4.12"
uuid-utils = "^0.9.0"
typer = "^0.14.0"
auth365 = "^0.1.2"


[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
ruff = "^0.7.1"
pre-commit = "^3.7.0"
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
sqlalchemy-utils = "^0.41.2"
faker = "^28.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"
output-format = "concise"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF",  # ruff rules
    "C90",  # mccabe
    "N",  # pep8-naming
    "ASYNC",  # flake8-async
    "C4",  # flake8-comprehensions
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-puse-pathlib
    "TCH",  # flake8-type-checking
    "PERF",  # Perflint
]
ignore = [
    "E501",  # line too long, handled by formatter later
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "RUF012",  # mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.mypy]
strict = true
pretty = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
